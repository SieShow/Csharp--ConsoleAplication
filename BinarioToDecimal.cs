using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace ConsoleApplication1{    class Program    {        static void Main(string[] args)        {            int bi, i=0; // se esses valores forem double, quando chegar na divisão, em vez d passar de 101 para 10, sera 10.1            double num = 0, de = 0; // o valor do número e do decimal deve ser double para que a função Math.Pow funcione            Console.Write("Digite o número binário: ");            bi = int.Parse(Console.ReadLine());            while(bi != 0) // enquanto o número binário for diferente de 0            {                    num = bi % 10; // o primeiro valor a ser convertido para decimal é o resto da divisão do binário por 10 ex: 101 % 10 = 1                     num *= Math.Pow(2, i); // o valor desse número para decimal será 2 elevado ao primeiro valor da potenciação => primeiro 0,1,2                    de += num; // o valor dos decimais será o número achado mais os decimais. Inicialmente sendo 0                    bi /= 10; // diminuo o valor do binário. Se entrou como 101, será 10 dps 1 dps 0. Então o programa para                    i++; // valor do expoente                             }            Console.Write(de);            Console.ReadKey();        }    }}